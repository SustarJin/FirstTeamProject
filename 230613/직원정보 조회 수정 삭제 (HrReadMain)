public void emList() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       직원 전체 목록          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		
		EmployeeDAO edao = new EmployeeDAO;
		edao.emSelect();
		
		System.out.println("────────────────────────────────────────────────────────");
        System.out.println(" NO. |   직원번호   |   직원이름  |  성별  |   부서번호   | 직급 ");
        System.out.println("────────────────────────────────────────────────────────");
        System.out.println("  1  |           |           |      |            |      ");
        System.out.println("────────────────────────────────────────────────────────");
		System.out.println();
		
		System.out.println(" < 상세조회가 필요하면 아래 메뉴를 선택해주세요. >");
		System.out.println();
		System.out.println(" 1. 부서별 조회  2. 직급별 조회");
		System.out.println(" 3. 개별 조회    4. 직원조회 메뉴");
	    System.out.println();
	    System.out.println("  💡 선택(숫자 입력) >> ");
	    System.out.println();
	    
	    int input = sc.nextInt();
		
	    switch (input) {
	    case 1:
	    	emList1();
	    	break;
	    case 2:
	    	emList2();
	    	break;
	    case 3:
	    	emDetail(null);
	    	break;
	    case 4:
	    	emView();
	    	break;
	    default: System.out.println(" 1~4번을 입력하세요. ");
	    emList();
	    }
	    }
	    
	    
		public void emList1() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║     부서별 직원 조회           ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 생산팀(D1)     2. 인사팀(D2)");
		System.out.println("  3. 품질관리팀(D3)   4. 경리팀(D4) ");
		System.out.println();
		System.out.println("  💡 선택(숫자 입력) >> ");
        int input = sc.nextInt();
        
        switch (input) {
	    case 1:
	    	emSelectP(if(dname == D1));
	    	break;
	    case 2:
	    	emSelectP(if(dname == D2));
	    	break;
	    case 3:
	    	emSelectP(if(dname == D3));
	    	break;
	    case 4:
	    	emSelectP(if(dname == D4));
	    	break;
	    default: System.out.println(" 1~4번을 입력하세요. ");
	    emList1();
	    }
        
        System.out.println();
		System.out.println("─────────────────────────────────────────────────────");
        System.out.println(" NO. |직원번호 |  직원이름 |  성별 |  부서번호 | 직급 ");
        System.out.println("─────────────────────────────────────────────────────");
        System.out.println("  1  |      |         |      |        |       ");
        System.out.println("─────────────────────────────────────────────────────");
		System.out.println();
        System.out.println();
        System.out.println("  1. 개별 조회  2. 직원 조회 메뉴"); 
        System.out.println();
        System.out.println("  💡 선택(숫자 입력) >> ");
        System.out.println();
        input = sc.nextInt();
        switch (input) {
	    case 1:
	    	emDetail(null);
	    	break;
	    case 2:
	    	pmReader();
	    	break;
	    default: System.out.println(" 1~2번을 입력하세요. ");
	    emList1();
	    }
		
	}
		
		
		
		
        
		public void emList2() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║      직급별 직원 조회      　　 ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 사원   2. 대리");
		System.out.println("  3. 과장   4. 부장");
		System.out.println();
		System.out.println("  💡 선택(숫자 입력) >> ");
		System.out.println();
		input = sc.nextInt();
	        switch (input) {
		    case 1:
		    	emSelectP(if(position == "사원"));
		    	break;
		    case 2:
		    	emSelectP(if(position == "대리"));
		    	break;
		    case 3:
		    	emSelectP(if(posirion == "과장"));
		    	break;
		    case 4:
		    	emSelectP(if(position == "부장"));
		    	break;
		    default System.out.println(" 1~4번을 입력하세요. ");
		    emList1();
		    }
	        
		System.out.println("────────────────────────────────────────────────────────");
        System.out.println(" NO. |직원번호 | 직원이름  |  성별 |  부서번호  | 직급 ");
        System.out.println("────────────────────────────────────────────────────────");
        System.out.println("  1  |      |         |      |         |      ");
        System.out.println("────────────────────────────────────────────────────────");
		System.out.println();
        System.out.println();
        System.out.println("  1. 개별 조회  2. 직원 조회 메뉴"); 
        System.out.println();
        System.out.println("  💡 선택(숫자 입력) >> ");
        System.out.println();
		int input = sc.nextInt();
		switch (input) {
	    case 1:
	    	emDetail(null);
	    	break;
	    case 2:
	    	pmReader();
	    	break;
	    default: System.out.println(" 1~2번을 입력하세요. ");
	    	emList1();
	    }
		
	}
		
		
		
		
		
	
	public void emDetail(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║      직원 개별 조회           ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  💡 직원번호를 입력하세요 >>  ");
		emid = sc.next();
		EmployeeVO evo = edao.emSelect(emid);
		System.out.println();

		if(evo != null) {		
		System.out.println("─────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("  NO. |직원번호 | 직원이름 | 성별 | 생년월일 | 연락처 | 입사일자 | 부서번호 | 직급  | 주소");
        System.out.println("─────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("  1  |          |          |      |          |         |          |         |       |      ");
        System.out.println("─────────────────────────────────────────────────────────────────────────────────────────────");
        System.out.println("      " + "evo.getEmid() + evo.getName() + evo.getGen + evo.getBirth + evo.getTel + evo.getJoin + evo.getDno + evo.getadd");
        System.out.println("─────────────────────────────────────────────────────────────────────────────────────────────");

        System.out.println("  1. 정보 수정  2. 정보 삭제  3. 직원 조회 메뉴");
		System.out.println();
		System.out.println("  💡 선택(숫자 입력) >> ");
		System.out.println();
		
		int input = sc.nextInt();
		HrAdminMain hra = new HrAdminMain();
		
		switch (input) {
	    case 1:
	    	hra.emModify(emid);
	    	break;
	    case 2:
	    	hra.emRemove(emid);
	    	break;
	    case 3:
	    	pmReader();
	    	break;
	    default: System.out.println(" 1~3번을 입력하세요. ");
	    	emDetail(emid);
		}
		}
		
	}
	
